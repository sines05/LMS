/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lms.gui.dialog;

import java.awt.AlphaComposite;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.sql.Blob;
import javax.swing.ImageIcon;
import javax.swing.text.JTextComponent;
import lms.model.Book;
import lms.model.Student;
import lms.util.AutoSearch;
import lms.util.ComboBoxList;

/**
 *
 * @author Aldrin
 */
public class JDialogManualEntry extends javax.swing.JDialog {

    private lms.model.Book book = new Book();
    private lms.util.QueryLMS query = new lms.util.QueryLMS();
    private static boolean bookAdded;
    private JTextComponent productEditor;
    private String isbn;
    private lms.gui.JFrameMainSLM mainFrame;
    private Student student = new Student();

    /**
     * Creates new form JDialogManualEntry
     */
    public JDialogManualEntry(lms.gui.JFrameMainSLM parent, boolean modal, lms.model.Student student) {
        super(parent, modal);
        initComponents();
        this.student = student;
        this.mainFrame = parent;
        jButtonAddEntry.setEnabled(false);
        bookComboBox();
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                //Product
                jComboBoxBook.setEditable(true);
                productEditor = (JTextComponent) jComboBoxBook.getEditor().getEditorComponent();
                productEditor.setDocument(new AutoSearch(jComboBoxBook));
                productEditor.addKeyListener(new KeyAdapter() {
                    @Override
                    public void keyPressed(KeyEvent e) {
                        if (jComboBoxBook.isDisplayable()) {
                            jComboBoxBook.setPopupVisible(true);
                        }
                        if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                            jComboBoxBookKeyPressed(e);
                        }
                    }

                    @Override
                    public void keyReleased(java.awt.event.KeyEvent evt) {
                        if ((productEditor.getText().length() == 0) || (productEditor.getText().isEmpty())) {
                            jButtonAddEntry.setEnabled(false);
                        } else {
                            jButtonAddEntry.setEnabled(true);
                        }
                        if (productEditor.getText().length() > 0) {
                            jButtonAddEntry.setEnabled(true);
                        }
                    }
                });
            }
        });
        if (this.book == null) {
            jButtonAddEntry.setEnabled(false);
        }
        if (query.isBookPhotoNull(this.book) == true) {
            displayBookPicture();
        } else {
            jLabelPicture.setIcon(null);
            jLabelPicture.setText("No Photo");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBoxBook = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jButtonAddEntry = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabelPicture = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Book");

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBoxBook.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jComboBoxBook.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxBook.setPreferredSize(new java.awt.Dimension(56, 33));
        jComboBoxBook.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxBookItemStateChanged(evt);
            }
        });
        jComboBoxBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxBookMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jComboBoxBookMouseEntered(evt);
            }
        });
        jComboBoxBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxBookActionPerformed(evt);
            }
        });
        jComboBoxBook.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBoxBookPropertyChange(evt);
            }
        });
        jComboBoxBook.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxBookKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jComboBoxBookKeyReleased(evt);
            }
        });
        jPanel1.add(jComboBoxBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 295, 260, -1));

        jLabel7.setFont(new java.awt.Font("Courier New", 0, 16)); // NOI18N
        jLabel7.setText("Book");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 280, -1));

        jButtonAddEntry.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        jButtonAddEntry.setMnemonic('E');
        jButtonAddEntry.setText("Enter");
        jButtonAddEntry.setActionCommand("Enter");
        jButtonAddEntry.setPreferredSize(new java.awt.Dimension(63, 33));
        jButtonAddEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddEntryActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonAddEntry, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 341, 260, -1));

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.BorderLayout());

        jLabelPicture.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        jLabelPicture.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelPicture.setText("No Photo");
        jLabelPicture.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelPictureMouseClicked(evt);
            }
        });
        jPanel3.add(jLabelPicture, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 25, 180, 240));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(307, 461));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxBookItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxBookItemStateChanged
        if (jComboBoxBook.getSelectedIndex() < 1) {
            return;
        } else {
            ComboBoxList bookIdl = (ComboBoxList) this.jComboBoxBook.getSelectedItem();
            book.setId(Integer.parseInt(bookIdl.getId()));
            book = query.selectManual(book);
            this.setIsbn(book.getIsbn());
            jButtonAddEntry.setEnabled(true);
            displayBookPicture();
        }
    }//GEN-LAST:event_jComboBoxBookItemStateChanged

    private void jComboBoxBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxBookMouseClicked
        keyPressed();
    }//GEN-LAST:event_jComboBoxBookMouseClicked

    private void jComboBoxBookMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxBookMouseEntered

    }//GEN-LAST:event_jComboBoxBookMouseEntered

    private void jComboBoxBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxBookActionPerformed

    }//GEN-LAST:event_jComboBoxBookActionPerformed

    private void jComboBoxBookPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBoxBookPropertyChange

    }//GEN-LAST:event_jComboBoxBookPropertyChange

    private void jComboBoxBookKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxBookKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            keyPressed();
        }
    }//GEN-LAST:event_jComboBoxBookKeyPressed

    private void jComboBoxBookKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxBookKeyReleased

    }//GEN-LAST:event_jComboBoxBookKeyReleased

    private void jButtonAddEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddEntryActionPerformed
        keyPressed();
    }//GEN-LAST:event_jButtonAddEntryActionPerformed

    private void jLabelPictureMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPictureMouseClicked
//        browse();
    }//GEN-LAST:event_jLabelPictureMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddEntry;
    private javax.swing.JComboBox<Object> jComboBoxBook;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelPicture;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
    private void keyPressed() {
        try {
            if ((null == jComboBoxBook.getSelectedItem()) || (jComboBoxBook.getSelectedItem() == "")) {
                return;
            } else {
                ComboBoxList bookIdl = (ComboBoxList) this.jComboBoxBook.getSelectedItem();
                book.setId(Integer.parseInt(bookIdl.getId()));
                book = query.selectManual(book);
                lms.model.BookBorrow bb = query.selectBookIdStudentId(student.getId(), book.getId());
                if (bb.getId() == null) {
                    //Borrow Book
                    JDialogConfirmBorrowBook borrowBook = new JDialogConfirmBorrowBook(mainFrame, true, student, book);
                    borrowBook.setVisible(true);
                } else {
                    //Return Book
                    JDialogConfirmReturnBook returnBook = new JDialogConfirmReturnBook(mainFrame, true, student, book);
                    new JDialogBorrowBooks(true);
                    returnBook.setVisible(true);
                }
                this.setIsbn(book.getIsbn());
                jButtonAddEntry.setEnabled(true);
            }
            if ((book.toString().isEmpty()) || (book.toString().length() == 0)) {
                this.setBookAdded(false);
            } else {
                this.setBookAdded(true);
                jButtonAddEntry.setEnabled(true);
            }
            this.dispose();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @return the bookAdded
     */
    public static boolean isBookAdded() {
        return bookAdded;
    }

    /**
     * @param aBookAdded the bookAdded to set
     */
    public static void setBookAdded(boolean aBookAdded) {
        bookAdded = aBookAdded;
    }

    private void bookComboBox() {
        this.jComboBoxBook.removeAllItems();
        jComboBoxBook.addItem("");
        query.bookComboBox();
        for (ComboBoxList a : query.getList()) {
            this.jComboBoxBook.addItem(a);
        }
    }

    /**
     * @return the isbn
     */
    public String getIsbn() {
        return isbn;
    }

    /**
     * @param isbn the isbn to set
     */
    public void setIsbn(String isbn) {
        this.isbn = isbn;
    }

    private void displayBookPicture() {

        int IMG_WIDTH = 180;
        int IMG_HEIGHT = 240;
        try {
            Blob blobImage = (Blob) query.selectedBookPhoto(book);
            if (blobImage == null) {
                jLabelPicture.setText("");
                jLabelPicture.setIcon(null);
                jLabelPicture.setText("No Photo");
                return;
            } else {
                ImageIcon icon = new ImageIcon(blobImage.getBytes(1L, (int) blobImage.length()));

                Image image = icon.getImage();
                int type = BufferedImage.TYPE_INT_ARGB;

                BufferedImage resizedImage = new BufferedImage(IMG_WIDTH, IMG_HEIGHT, type);
                Graphics2D g = resizedImage.createGraphics();
                g.drawImage(image, 0, 0, IMG_WIDTH, IMG_HEIGHT, null);
                g.dispose();
                g.setComposite(AlphaComposite.Src);

                g.setRenderingHint(RenderingHints.KEY_INTERPOLATION,
                        RenderingHints.VALUE_INTERPOLATION_BILINEAR);
                g.setRenderingHint(RenderingHints.KEY_RENDERING,
                        RenderingHints.VALUE_RENDER_QUALITY);
                g.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                        RenderingHints.VALUE_ANTIALIAS_ON);

                jLabelPicture.setIcon(new ImageIcon(resizedImage));//image to label
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
