/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lms.gui.dialog;

import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.text.DecimalFormat;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import lms.util.ComboBoxList;
import lms.util.QueryLMS;

/**
 *
 * @author admin
 */
public class JDialogReceivePenaltyPayments extends javax.swing.JDialog implements MouseListener {

    private QueryLMS query = new QueryLMS();
    private lms.gui.JFrameMainSLM mainFrame;
    private static String start;
    private static String end;
    private DecimalFormat df = new DecimalFormat("##,##0.00");

    /**
     * Creates new form JDialogReceivePenaltyPayments
     */
    public JDialogReceivePenaltyPayments(lms.gui.JFrameMainSLM parent, boolean modal) {
        super(parent, modal);
        this.mainFrame = parent;
        initComponents();
        comboStart();
        comboEnd();
        setTablePenalties();
        selectUserCollectedPenalties();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxStart = new javax.swing.JComboBox<>();
        jComboBoxEnd = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabelTotal = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Receive Penalty Payment");

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        jLabel1.setText("Start");
        jLabel1.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 72, -1));

        jLabel2.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        jLabel2.setText("End");
        jLabel2.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(464, 11, 44, -1));

        jComboBoxStart.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxStart.setPreferredSize(new java.awt.Dimension(100, 30));
        jComboBoxStart.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxStartItemStateChanged(evt);
            }
        });
        jComboBoxStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxStartActionPerformed(evt);
            }
        });
        jComboBoxStart.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBoxStartPropertyChange(evt);
            }
        });
        jComboBoxStart.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                jComboBoxStartVetoableChange(evt);
            }
        });
        jPanel1.add(jComboBoxStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 301, -1));

        jComboBoxEnd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxEnd.setPreferredSize(new java.awt.Dimension(100, 30));
        jComboBoxEnd.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxEndItemStateChanged(evt);
            }
        });
        jComboBoxEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxEndActionPerformed(evt);
            }
        });
        jComboBoxEnd.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBoxEndPropertyChange(evt);
            }
        });
        jPanel1.add(jComboBoxEnd, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 10, 301, -1));

        jPanel2.setLayout(new java.awt.BorderLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 1010, 450));

        jLabel3.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Total:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 520, 100, 40));

        jLabelTotal.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        jLabelTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(jLabelTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 520, 150, 40));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(1048, 607));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxStartItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxStartItemStateChanged


    }//GEN-LAST:event_jComboBoxStartItemStateChanged

    private void jComboBoxStartPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBoxStartPropertyChange

    }//GEN-LAST:event_jComboBoxStartPropertyChange

    private void jComboBoxEndPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBoxEndPropertyChange

    }//GEN-LAST:event_jComboBoxEndPropertyChange

    private void jComboBoxEndItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxEndItemStateChanged

    }//GEN-LAST:event_jComboBoxEndItemStateChanged

    private void jComboBoxStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxStartActionPerformed
        try {
            ComboBoxList courseIdl = (ComboBoxList) this.jComboBoxStart.getSelectedItem();
            setStart(courseIdl.getId());
            ComboBoxList end = (ComboBoxList) this.jComboBoxEnd.getSelectedItem();
            setEnd(end.getId());
            selectUserCollectedPenalties();
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jComboBoxStartActionPerformed

    private void jComboBoxEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxEndActionPerformed
        try {
            ComboBoxList courseIdl = (ComboBoxList) this.jComboBoxStart.getSelectedItem();
            setStart(courseIdl.getId());
            ComboBoxList end = (ComboBoxList) this.jComboBoxEnd.getSelectedItem();
            setEnd(end.getId());
            selectUserCollectedPenalties();
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jComboBoxEndActionPerformed

    private void jComboBoxStartVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_jComboBoxStartVetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxStartVetoableChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Object> jComboBoxEnd;
    private javax.swing.JComboBox<Object> jComboBoxStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelTotal;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
  private void comboStart() {
        this.jComboBoxStart.removeAllItems();
        query.startComboBox();
        for (ComboBoxList a : query.getList()) {
            this.jComboBoxStart.addItem(a);
        }
    }

    private void comboEnd() {
        this.jComboBoxEnd.removeAllItems();
        query.endComboBox();
        for (ComboBoxList a : query.getList()) {
            this.jComboBoxEnd.addItem(a);
        }
    }

    //table 2
    public DefaultTableModel tableModel = new DefaultTableModel() {
        public Class getColumnClass(int columnIndex) {
            if (columnIndex == 0) {
                return String.class;
            }
            switch (columnIndex) {
                case 1:
                    return String.class;
                case 2:
                    return Integer.class;
                case 3:
                    return Integer.class;
                case 4:
                    return Integer.class;
                case 5:
                    return Integer.class;
                default:
                    return String.class;
            }
        }

        public boolean isCellEditable(int row, int col) {
            if (col < 10) {
                return false;

            } else {
                return true;
            }
        }
    };
    private TableRowSorter<TableModel> sorter2 = new TableRowSorter<TableModel>(tableModel);

    public void setTablePenalties() {
        try {
            String[] columnNames = {
                "StudentId",//
                "Student",//1
                "Date Paid",//2
                "Penalty Days",//3
                "Rate",//4
                "Penalty Amount",//5
                "PenaltyUF"//6
            };//15

            jTable1 = new javax.swing.JTable(tableModel);
            JTableHeader header = jTable1.getTableHeader();
            header.setPreferredSize(new Dimension(100, 35));
            header.setFont(new Font("Courier New", Font.PLAIN, 14));
            header.setBackground(new java.awt.Color(153, 153, 153));
            jTable1.setRowSorter(sorter2);
            jTable1.addMouseListener(this);
            jTable1.setRowHeight(30);
            jTable1.setFont(new Font("Courier New", Font.PLAIN, 14));
//            jTable1.setCellSelectionEnabled(true);
            jTable1.setFocusable(false);
            for (int i = 0; i < columnNames.length;) {
                tableModel.addColumn(columnNames[i]);
                i++;
            }

            jScrollPane1.setViewportView(jTable1);

            TableColumn[] column = new TableColumn[100];

            column[0] = jTable1.getColumnModel().getColumn(0);
            column[0].setPreferredWidth(40);

            column[1] = jTable1.getColumnModel().getColumn(1);
            column[1].setPreferredWidth(250);

            column[2] = jTable1.getColumnModel().getColumn(2);
            column[2].setPreferredWidth(180);

            column[3] = jTable1.getColumnModel().getColumn(3);
            column[3].setPreferredWidth(80);

            column[4] = jTable1.getColumnModel().getColumn(4);
            column[4].setPreferredWidth(100);

            column[5] = jTable1.getColumnModel().getColumn(5);
            column[5].setPreferredWidth(100);
            column[6] = jTable1.getColumnModel().getColumn(6);
            column[6].setPreferredWidth(100);
            TableColumn hidden1 = jTable1.getColumnModel().getColumn(0);
            hidden1.setMinWidth(0);
            hidden1.setPreferredWidth(0);
            hidden1.setMaxWidth(0);
            TableColumn hidden2 = jTable1.getColumnModel().getColumn(6);
            hidden2.setMinWidth(0);
            hidden2.setPreferredWidth(0);
            hidden2.setMaxWidth(0);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        if (e.getSource() == jTable1) {
            if (e.getButton() == MouseEvent.BUTTON1) {
                if (e.getClickCount() == 1) {
                    int row = jTable1.getSelectedRow();
                    if (row != -1) {

                        Object studentIdl = jTable1.getValueAt(row, 0);

                    }
                }
            }

        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
    }

    @Override
    public void mouseReleased(MouseEvent e) {
    }

    @Override
    public void mouseEntered(MouseEvent e) {
    }

    @Override
    public void mouseExited(MouseEvent e) {
    }

    private void selectUserCollectedPenalties() {
        tableModel.setRowCount(0);
        query.selectUserCollectedPenalties(getStart(), getEnd());
        for (int i = 0; i < query.getData().size(); i++) {
            tableModel.addRow((Vector) query.getData().get(i));
        }
        jLabelTotal.setText(String.valueOf(df.format(calculateTotalPenaltyReceived())));

    }

    /**
     * @return the start
     */
    public static String getStart() {
        return start;
    }

    /**
     * @param aStart the start to set
     */
    public static void setStart(String aStart) {
        start = aStart;
    }

    /**
     * @return the end
     */
    public static String getEnd() {
        return end;
    }

    /**
     * @param aEnd the end to set
     */
    public static void setEnd(String aEnd) {
        end = aEnd;
    }

    private Double calculateTotalPenaltyReceived() {
        Double sum = 0.0D;
        try {
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                Object payPLine =(String) jTable1.getValueAt(i, 6);
                Double p = Double.parseDouble(payPLine.toString());
                sum = sum + p;
            }
        } catch (Exception e) {
        }
        return sum;
    }

}
